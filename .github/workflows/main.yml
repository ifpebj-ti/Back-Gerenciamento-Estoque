name: Deploy Application
on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: build
      run: |
          cd estoque
          mvn clean package -X
  
    - name: Login Docker
      run: docker login -u brazf -p ${{secrets.DOCKERHUB_TOKEN}}
    - name: Build docker image
      run: docker build -t brazf/estoque .
    - name: Push image docker
      run: docker push brazf/estoque

  deploy:
    needs: build
    runs-on: self-hosted
    steps:

    - name: Pull image from docker hub
      run: docker pull brazf/estoque:latest

    - name: Create .env file
      run: |
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "APP_PROFILE=${{ secrets.APP_PROFILE }}" >> .env
        echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
        echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env
        echo "JWT_DURATION=${{ secrets.JWT_DURATION }}" >> .env
        echo "CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}" >> .env
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env

    - name: Stop and remove existing containers
      run: |
        cd /path/to/docker-compose
        docker-compose down || true

    - name: Deploy application with docker-compose
      run: |
        cd docker
        docker-compose up -d --env-file ../.env