version: '3.8'

services:

  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
    networks:
      - back_network
    volumes:
      - mysql-data:/var/lib/mysql

  back:
    image: brazf/estoque:latest
    container_name: back-container
    ports:
      - "8080:8080"
    environment:
      DB_SERVER: mysql-container
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_PROFILE: ${APP_PROFILE}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      JWT_DURATION: ${JWT_DURATION}
      CORS_ORIGINS: ${CORS_ORIGINS}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://back-container:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - back_network
      - app_network

  front:
    image: brazf/estoque-frontend:latest
    container_name: front-container
    ports:
      - "80:3000"
    environment:
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXT_PUBLIC_API_URL: ${API_URL}
      NODE_ENV: production
    depends_on:
      back:
        condition: service_healthy
    networks:
      - app_network

networks:
  back_network:
    driver: bridge
  app_network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  